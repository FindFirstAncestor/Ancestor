local lib = {}

function lib:Create(type, proprieties)
	local instance = Instance.new(type)

	for i, v in next, proprieties do
		if instance[i] and proprieties ~= "Parent" then
			instance[i] = v
		end
	end

	return instance
end

local CoreGui = game:GetService("CoreGui")
local TweenService = game:GetService("TweenService")
local Mouse = game:GetService("Players").LocalPlayer:GetMouse()
local UIS = game:GetService("UserInputService")

function lib:Main()
    local main = {}
    local firstC = true

    main.ScreenGui = lib:Create("ScreenGui", {
        Name = "Calamity",
        ResetOnSpawn = false,
    })

    main.MainBody = lib:Create("Frame", {
        Name = "MainBody",
        BackgroundColor3 = Color3.fromRGB(25, 25, 25),
        BorderSizePixel = 0,
        Position = UDim2.new(0.355343342, 0, 0.358804077, 0),
        Size = UDim2.new(0, 554, 0, 304),
    })

    local dragInput
	local dragStart
	local startPos

	local function update(input)
		local delta = input.Position - dragStart
		main.MainBody:TweenPosition(UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y),'Out','Linear',0.01,true)
    end
    
	main.MainBody.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 then
			dragging = true
			dragStart = input.Position
			startPos = main.MainBody.Position
			repeat wait() until input.UserInputState == Enum.UserInputState.End
			dragging = false
		end
    end)
    
	main.MainBody.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement then
			dragInput = input
		end
    end)
    
	game:GetService("UserInputService").InputChanged:Connect(function(input)
		if input == dragInput and dragging then
			update(input)
		end
    end)
    
    main.TopBar = lib:Create("Frame", {
        Name = "TopBar",
        BackgroundColor3 = Color3.fromRGB(255, 255, 255),
        BorderSizePixel = 0,
        Size = UDim2.new(0, 554, 0, 40),
    })

    main.TopBarGradient = lib:Create("UIGradient", {
        Color = ColorSequence.new{ColorSequenceKeypoint.new(0.00, Color3.fromRGB(33, 55, 167)), ColorSequenceKeypoint.new(1.00, Color3.fromRGB(50, 64, 140))},
        Rotation = 90,
    })

    main.LogoTextFolder = lib:Create("Folder", {
        Name = "LogoTextFolder",
    })

    main.LogoText1 = lib:Create("TextLabel", {
        BackgroundColor3 = Color3.fromRGB(255, 255, 255),
        BackgroundTransparency = 1.000,
        BorderSizePixel = 0,
        Position = UDim2.new(-0.0204402134, 0, 0.125, 0),
        Size = UDim2.new(0, 52, 0, 30),
        Font = Enum.Font.GothamSemibold,
        Text = "l",
        TextColor3 = Color3.fromRGB(65, 255, 65),
        TextSize = 27.000,
        TextTransparency = 0.200,
    })

    main.LogoText2 = lib:Create("TextLabel", {
        BackgroundColor3 = Color3.fromRGB(255, 255, 255),
        BackgroundTransparency = 1.000,
        BorderSizePixel = 0,
        Position = UDim2.new(0.0129673611, 0, 0.125, 0),
        Size = UDim2.new(0, 17, 0, 30),
        Font = Enum.Font.GothamSemibold,
        Text = "Â¬",
        TextColor3 = Color3.fromRGB(17, 124, 255),
        TextSize = 27.000,
        TextTransparency = 0.200,
    })

    main.LogoText3 = lib:Create("TextLabel", {
        BackgroundColor3 = Color3.fromRGB(255, 255, 255),
        BackgroundTransparency = 1.000,
        BorderSizePixel = 0,
        Position = UDim2.new(-0.0204402227, 0, 0.125, 0),
        Size = UDim2.new(0, 47, 0, 30),
        Font = Enum.Font.GothamSemibold,
        Text = "k",
        TextColor3 = Color3.fromRGB(255, 28, 100),
        TextSize = 27.000,
        TextTransparency = 0.200,
    })

    main.LogoText4 = lib:Create("TextLabel", {
        BackgroundColor3 = Color3.fromRGB(255, 255, 255),
        BackgroundTransparency = 1.000,
        BorderSizePixel = 0,
        Position = UDim2.new(0.0331138819, 0, 0.125, 0),
        Size = UDim2.new(0, 87, 0, 30),
        Font = Enum.Font.GothamBold,
        Text = "Calamity",
        TextColor3 = Color3.fromRGB(255, 255, 255),
        TextSize = 27.000,
    })

    main.CloseFrame = lib:Create("ImageLabel", {
        Name = "CloseFrame",
        BackgroundColor3 = Color3.fromRGB(255, 255, 255),
        BackgroundTransparency = 1.000,
        Position = UDim2.new(0.958662987, 0, 0.250000001, 0),
        Size = UDim2.new(0, 15, 0, 15),
        Image = "rbxassetid://3570695787",
        ImageColor3 = Color3.fromRGB(255, 0, 4),
        ScaleType = Enum.ScaleType.Slice,
        SliceCenter = Rect.new(100, 100, 100, 100),
        SliceScale = 0.120,
        ImageTransparency = 1,
    })

    main.Close = lib:Create("TextButton", {
        Name = "Close",
        BackgroundColor3 = Color3.fromRGB(255, 255, 255),
        BackgroundTransparency = 1.000,
        BorderSizePixel = 0,
        Position = UDim2.new(0, 0, -0.466666669, 0),
        Size = UDim2.new(0, 15, 0, 25),
        Font = Enum.Font.SourceSans,
        Text = "x",
        TextColor3 = Color3.fromRGB(255, 255, 255),
        TextSize = 18.000,
    })

    main.Close.MouseEnter:Connect(function()
        TweenService:Create(main.CloseFrame, TweenInfo.new(0.1), {ImageTransparency = 0}):Play()
    end)

    main.Close.MouseLeave:Connect(function()
        TweenService:Create(main.CloseFrame, TweenInfo.new(0.1), {ImageTransparency = 1}):Play()
    end)

    main.CategoryContainer = lib:Create("ScrollingFrame", {
        Name = "CategoryContainer",
        Active = true,
        BackgroundColor3 = Color3.fromRGB(47, 47, 47),
        BorderSizePixel = 0,
        Position = UDim2.new(0, 0, 0.131578952, 0),
        Size = UDim2.new(0, 50, 0, 264),
        CanvasSize = UDim2.new(0, 0, 0, 1),
        ScrollBarThickness = 0,
    })

    main.CategoryPadding = lib:Create("UIPadding", {
        PaddingTop = UDim.new(0, 2),
        PaddingBottom = UDim.new(0, 2),
    })

    main.CategoryLayout = lib:Create("UIListLayout", {
        SortOrder = Enum.SortOrder.LayoutOrder,
        Padding = UDim.new(0, 3),
    })

    function main:Category(ImageId)
        local categories = {}
        
        categories.Button = lib:Create("ImageButton", {
            Active = false,
            BackgroundColor3 = Color3.fromRGB(65, 65, 65),
            BorderSizePixel = 0,
            Selectable = false,
            Size = UDim2.new(1, 0, 0, 50),
            AutoButtonColor = false,
            Image = "http://www.roblox.com/asset/?id="..ImageId,
        })

        categories.Container = lib:Create("ScrollingFrame", {
            BackgroundColor3 = Color3.fromRGB(17, 17, 17),
            BorderSizePixel = 0,
            Position = UDim2.new(0.091575101, 0, 0.138557434, 0),
            Selectable = false,
            Size = UDim2.new(0, 503, 0, 262),
            ScrollBarThickness = 0,
            CanvasSize = UDim2.new(0,0,0,5),
            Visible = false,
        })

        if firstC then 
            categories.Container.Visible = true 
        end 

        categories.ContainerLayout = lib:Create("UIListLayout", {
            SortOrder = Enum.SortOrder.LayoutOrder,
            Padding = UDim.new(0, 5),
        })

        categories.ContainerPadding = lib:Create("UIPadding", {
            PaddingLeft = UDim.new(0, 5),
            PaddingBottom = UDim.new(0,5),
        })

        categories.Button.MouseButton1Click:Connect(function()
            for i,v in pairs(main.MainBody:GetChildren()) do 
                if v.Name == "ScrollingFrame" then 
                    v.Visible = false 
                end
            end

            categories.Container.Visible = true
        end)

        function categories:Section(Name)
            local sections = {}

            sections.sectionname = lib:Create("TextLabel", {
                Name = Name.."Section",
                BackgroundColor3 = Color3.fromRGB(255, 255, 255),
                BackgroundTransparency = 1.000,
                BorderSizePixel = 0,
                Position = UDim2.new(0.00994035788, 0, 0, 0),
                Size = UDim2.new(0, 105, 0, 30),
                Font = Enum.Font.SourceSansLight,
                Text = Name,
                TextColor3 = Color3.fromRGB(255, 255, 255),
                TextSize = 27.000,
                TextXAlignment = Enum.TextXAlignment.Left,
            })

            categories.Container.CanvasSize = categories.Container.CanvasSize + UDim2.new(0,0,0,30)

            function sections:Button(Name, CallBack, Animated)
                local buttons = {}
                
                buttons.buttonb = lib:Create("ImageLabel", {
                    Name = Name.."Button",
                    BackgroundColor3 = Color3.fromRGB(255, 255, 255),
                    BackgroundTransparency = 1.000,
                    Position = UDim2.new(0.00415800419, 0, 0.86175108, 0),
                    Size = UDim2.new(0, 484, 0, 35),
                    Image = "rbxassetid://3570695787",
                    ImageColor3 = Color3.fromRGB(65, 65, 65),
                    ScaleType = Enum.ScaleType.Slice,
                    SliceCenter = Rect.new(100, 100, 100, 100),
                    SliceScale = 0.040,
                })

                buttons.buttonframe = lib:Create("ImageLabel", {
                    BackgroundColor3 = Color3.fromRGB(255, 255, 255),
                    BackgroundTransparency = 1.000,
                    Position = UDim2.new(0.009999929, 0, 0.0857142881, 0),
                    Size = UDim2.new(0, 476, 0, 29),
                    Image = "rbxassetid://3570695787",
                    ImageColor3 = Color3.fromRGB(55, 55, 55),
                    ScaleType = Enum.ScaleType.Slice,
                    SliceCenter = Rect.new(100, 100, 100, 100),
                    SliceScale = 0.040,
                })

                buttons.button = lib:Create("TextButton", {
                    BackgroundColor3 = Color3.fromRGB(55, 55, 55),
                    BackgroundTransparency = 1.000,
                    BorderSizePixel = 0,
                    Size = UDim2.new(0, 476, 0, 29),
                    AutoButtonColor = false,
                    Text = Name,
                    Font = Enum.Font.GothamSemibold,
                    TextColor3 = Color3.fromRGB(255, 255, 255),
                    TextSize = 16.000,
                })

                buttons.button.MouseButton1Click:Connect(function()
                    if CallBack then 
                        CallBack()
                    end

                    if Animated then 
                        TweenService:Create(buttons.buttonframe, TweenInfo.new(0.1), {Size = UDim2.new(0, 440,0, 25),  Position = UDim2.new(0.047, 0,0.143, 0)}):Play()
                        TweenService:Create(buttons.button, TweenInfo.new(0.1), {Size = UDim2.new(0, 437,0, 25), Position = UDim2.new(0,0,0,0)}):Play()
                        wait(0.05)
                        TweenService:Create(buttons.buttonframe, TweenInfo.new(0.1), {Size = UDim2.new(0, 476,0, 29), Position = UDim2.new(0.01, 0,0.086, 0)}):Play()
                        TweenService:Create(buttons.button, TweenInfo.new(0.1), {Size = UDim2.new(0, 476,0, 29), Position = UDim2.new(0, 0,0, 0)}):Play()
                    end
                end)
                
                buttons.buttonb.Parent = categories.Container
                buttons.buttonframe.Parent = buttons.buttonb
                buttons.button.Parent = buttons.buttonframe

                categories.Container.CanvasSize = categories.Container.CanvasSize + UDim2.new(0,0,0,45)

                return buttons 
            end

            function sections:Toggle(Name, CallBack, Default)
                local toggles = {}
                local toggled = false

                toggles.toggle = lib:Create("ImageButton", {
                    Name = Name.."Toggle",
                    Active = false,
                    BackgroundColor3 = Color3.fromRGB(248, 248, 248),
                    BackgroundTransparency = 1.000,
                    Position = UDim2.new(0.00415800419, 0, 0.86175108, 0),
                    Selectable = false,
                    Size = UDim2.new(0, 484, 0, 35),
                    Image = "rbxassetid://3570695787",
                    ImageColor3 = Color3.fromRGB(65, 65, 65),
                    ScaleType = Enum.ScaleType.Slice,
                    SliceCenter = Rect.new(100, 100, 100, 100),
                    SliceScale = 0.040,
                }) 

                toggles.togglename = lib:Create("TextLabel", {
                    BackgroundColor3 = Color3.fromRGB(255, 255, 255),
                    BackgroundTransparency = 1.000,
                    BorderSizePixel = 0,
                    Size = UDim2.new(0, 79, 0, 35),
                    Font = Enum.Font.GothamSemibold,
                    Text = Name,
                    TextColor3 = Color3.fromRGB(255, 255, 255),
                    TextSize = 16.000,
                    TextScaled = true,
                    TextWrapped = true,
                })
                
                toggles.t1 = lib:Create("ImageLabel", {
                    Name = "ToggleFrame",
                    BackgroundColor3 = Color3.fromRGB(255, 255, 255),
                    BackgroundTransparency = 1.000,
                    Position = UDim2.new(0.163223147, 0, 0.0857142881, 0),
                    Size = UDim2.new(0, 401, 0, 29),
                    Image = "rbxassetid://3570695787",
                    ImageColor3 = Color3.fromRGB(55, 55, 55),
                    ScaleType = Enum.ScaleType.Slice,
                    SliceCenter = Rect.new(100, 100, 100, 100),
                    SliceScale = 0.040,
                })

                toggles.t2 = lib:Create("ImageLabel", {
                    Name = "ToggleFrame",
                    BackgroundColor3 = Color3.fromRGB(255, 255, 255),
                    BackgroundTransparency = 1.000,
                    Position = UDim2.new(0.891402781, 0, 0.137931034, 0),
                    Size = UDim2.new(0, 43, 0, 21),
                    Image = "rbxassetid://3570695787",
                    ImageColor3 = Color3.fromRGB(45, 45, 45),
                    ScaleType = Enum.ScaleType.Slice,
                    SliceCenter = Rect.new(100, 100, 100, 100),
                    SliceScale = 0.040,
                })

                toggles.t3 = lib:Create("ImageLabel", {
                    Name = "ToggleFrame",
                    BackgroundColor3 = Color3.fromRGB(255, 255, 255),
                    BackgroundTransparency = 1.000,
                    Position = UDim2.new(0, 0, 0, 0),
                    Size = UDim2.new(0, 12, 0, 21),
                    Image = "rbxassetid://3570695787",
                    ScaleType = Enum.ScaleType.Slice,
                    SliceCenter = Rect.new(100, 100, 100, 100),
                    SliceScale = 0.040,
                })

                if Default then 
                    toggled = true

                    TweenService:Create(toggles.t3, TweenInfo.new(0.1), {Position = UDim2.new(0.700523198, 0, 0, 0)}):Play()

                    if CallBack then 
                        CallBack(toggled)
                    end 
                end

                toggles.toggle.Parent = categories.Container
                toggles.togglename.Parent = toggles.toggle
                toggles.t1.Parent = toggles.toggle 
                toggles.t2.Parent = toggles.t1 
                toggles.t3.Parent = toggles.t2

                toggles.toggle.MouseButton1Click:Connect(function()
                    toggled = not toggled

                    if toggled then 
                        TweenService:Create(toggles.t3, TweenInfo.new(0.1), {Position = UDim2.new(0.700523198, 0, 0, 0)}):Play()
                    else 
                        TweenService:Create(toggles.t3, TweenInfo.new(0.1), {Position = UDim2.new(0, 0, 0, 0)}):Play()
                    end

                    if CallBack then 
                        CallBack(toggled)
                    end 
                end)

                categories.Container.CanvasSize = categories.Container.CanvasSize + UDim2.new(0,0,0,40)

                return toggles
            end

            function sections:TextLabel(Text)
                local textlabels = {}

                textlabels.textlabelframe = lib:Create("ImageLabel", {
                    Name = "TextLabel",
                    BackgroundColor3 = Color3.fromRGB(255, 255, 255),
                    BackgroundTransparency = 1.000,
                    Position = UDim2.new(0.00415800419, 0, 0.86175108, 0),
                    Size = UDim2.new(0, 484, 0, 35),
                    Image = "rbxassetid://3570695787",
                    ImageColor3 = Color3.fromRGB(65, 65, 65),
                    ScaleType = Enum.ScaleType.Slice,
                    SliceCenter = Rect.new(100, 100, 100, 100),
                    SliceScale = 0.040,
                })

                textlabels.textlabelframe2 = lib:Create("ImageLabel", {
                    Name = "TextLabelFrame",
                    BackgroundColor3 = Color3.fromRGB(255, 255, 255),
                    BackgroundTransparency = 1.000,
                    Position = UDim2.new(0.009999929, 0, 0.0857142881, 0),
                    Size = UDim2.new(0, 476, 0, 29),
                    Image = "rbxassetid://3570695787",
                    ImageColor3 = Color3.fromRGB(55, 55, 55),
                    ScaleType = Enum.ScaleType.Slice,
                    SliceCenter = Rect.new(100, 100, 100, 100),
                    SliceScale = 0.04,
                })

                textlabels.textlabel = lib:Create("TextLabel", {          
                    BackgroundColor3 = Color3.fromRGB(255, 255, 255),
                    BackgroundTransparency = 1.000,
                    BorderSizePixel = 0,
                    Position = UDim2.new(0, 0, -0.103448279, 0),
                    Size = UDim2.new(0, 476, 0, 35),
                    Font = Enum.Font.GothamSemibold,
                    Text = Text,
                    TextColor3 = Color3.fromRGB(255, 255, 255),
                    TextSize = 16.000,
                    TextWrapped = true,
                })

                categories.Container.CanvasSize = categories.Container.CanvasSize + UDim2.new(0,0,0,40)

                textlabels.textlabelframe.Parent = categories.Container
                textlabels.textlabelframe2.Parent = textlabels.textlabelframe
                textlabels.textlabel.Parent = textlabels.textlabelframe2

                return textlabels
            end

            function sections:Slider(Name, CallBack, Min, Max)
                local sliders = {}
                local slidervalue = 0

                sliders.sliderb = lib:Create("ImageLabel", {
                    Name = Name.."Slider",
                    BackgroundColor3 = Color3.fromRGB(255, 255, 255),
                    BackgroundTransparency = 1.000,
                    Position = UDim2.new(0.00415800419, 0, 0.86175108, 0),
                    Size = UDim2.new(0, 484, 0, 35),
                    Image = "rbxassetid://3570695787",
                    ImageColor3 = Color3.fromRGB(65, 65, 65),
                    ScaleType = Enum.ScaleType.Slice,
                    SliceCenter = Rect.new(100, 100, 100, 100),
                    SliceScale = 0.040,
                })

                sliders.slidertext = lib:Create("TextLabel", {
                    BackgroundColor3 = Color3.fromRGB(255, 255, 255),
                    BackgroundTransparency = 1.000,
                    BorderSizePixel = 0,
                    Size = UDim2.new(0, 79, 0, 35),
                    Font = Enum.Font.GothamSemibold,
                    Text = Name,
                    TextColor3 = Color3.fromRGB(255, 255, 255),
                    TextSize = 16.000,
                    TextScaled = true,
                    TextWrapped = true,
                })

                sliders.darkoutline = lib:Create("ImageLabel", {
                    Name = "SliderDarkOutline",
                    BackgroundColor3 = Color3.fromRGB(255, 255, 255),
                    BackgroundTransparency = 1.000,
                    Position = UDim2.new(0.163223147, 0, 0.0857142881, 0),
                    Size = UDim2.new(0, 401, 0, 29),
                    Image = "rbxassetid://3570695787",
                    ImageColor3 = Color3.fromRGB(55, 55, 55),
                    ScaleType = Enum.ScaleType.Slice,
                    SliceCenter = Rect.new(100, 100, 100, 100),
                    SliceScale = 0.040,
                })

                sliders.sliderinnerback = lib:Create("ImageLabel", {
                    Name = "SliderInner",
                    BackgroundColor3 = Color3.fromRGB(255, 255, 255),
                    BackgroundTransparency = 1.000,
                    Position = UDim2.new(0.0185848251, 0, 0.259605676, 0),
                    Size = UDim2.new(0, 365, 0, 12),
                    Image = "rbxassetid://3570695787",
                    ImageColor3 = Color3.fromRGB(45, 45, 45),
                    ScaleType = Enum.ScaleType.Slice,
                    SliceCenter = Rect.new(100, 100, 100, 100),
                    SliceScale = 0.040,
                })

                sliders.slider = lib:Create("TextButton", {
                    Name = "SliderButton",
                    BackgroundColor3 = Color3.fromRGB(55, 55, 55),
                    BackgroundTransparency = 1.000,
                    BorderSizePixel = 0,
                    Position = UDim2.new(0, 0, 0, 0),
                    Size = UDim2.new(1, 0, 0, 12),
                    AutoButtonColor = false,
                    Font = Enum.Font.SourceSans,
                    Text = "",
                    TextColor3 = Color3.fromRGB(0, 0, 0),
                    TextSize = 14.000,
                })

                sliders.sliderinner = lib:Create("ImageLabel", {
                    Name = "SliderInner",
                    BackgroundColor3 = Color3.fromRGB(255, 255, 255),
                    BackgroundTransparency = 1.000,
                    Size = UDim2.new(0, 0, 0, 12),
                    Image = "rbxassetid://3570695787",
                    ImageColor3 = Color3.fromRGB(24, 116, 255),
                    ScaleType = Enum.ScaleType.Slice,
                    SliceCenter = Rect.new(100, 100, 100, 100),
                    SliceScale = 0.040,
                })

                sliders.slidervalue = lib:Create("TextLabel", {
                    Name = "SliderValue",
                    BackgroundColor3 = Color3.fromRGB(255, 255, 255),
                    BackgroundTransparency = 1.000,
                    BorderSizePixel = 0,
                    Position = UDim2.new(0.498309135, 0, 0, 0),
                    Size = UDim2.new(0, 199, 0, 28),
                    Font = Enum.Font.Gotham,
                    Text = Min,
                    TextColor3 = Color3.fromRGB(255, 255, 255),
                    TextSize = 17.000,
                    TextWrapped = true,
                    TextXAlignment = Enum.TextXAlignment.Right,
                })

                sliders.slider.MouseButton1Down:Connect(function()
                    local connection = game:GetService("RunService").Heartbeat:Connect(function()
                        local Scale = math.clamp(Mouse.X - sliders.slider.AbsolutePosition.X,0,sliders.slider.AbsoluteSize.X) / sliders.slider.AbsoluteSize.X
                        slidervalue = math.floor(Min + ((Max-Min) * Scale))
                        sliders.slidervalue.Text = tostring(slidervalue)

                        if CallBack then
                            CallBack(slidervalue)
                        end

                        TweenService:Create(sliders.sliderinner, TweenInfo.new(0.04), {Size = UDim2.new(Scale, 0, 1, -2)}):Play()
                    end)
                    UIS.InputEnded:Connect(function(i)
                        if i.UserInputType == Enum.UserInputType.MouseButton1 then
                            if connection then
                                connection:Disconnect()
                                connection = nil
                            end
                        end
                    end)
                end)

                categories.Container.CanvasSize = categories.Container.CanvasSize + UDim2.new(0,0,0,40)

                sliders.sliderb.Parent = categories.Container
                sliders.slidertext.Parent = sliders.sliderb
                sliders.darkoutline.Parent = sliders.sliderb
                sliders.sliderinnerback.Parent = sliders.darkoutline
                sliders.slider.Parent = sliders.sliderinnerback
                sliders.sliderinner.Parent = sliders.slider
                sliders.slidervalue.Parent = sliders.darkoutline

                return sliders
            end 

            function sections:TextBox(Name, CallBack, PlaceholderText, AutoName)
                local tb = {}
                local text

                tb.textboxback = lib:Create("ImageLabel", {
                    Name = Name.."TextBox",
                    BackgroundColor3 = Color3.fromRGB(255, 255, 255),
                    BackgroundTransparency = 1.000,
                    Position = UDim2.new(0.00214187521, 0, 0.886178553, 0),
                    Size = UDim2.new(0, 484, 0, 35),
                    Image = "rbxassetid://3570695787",
                    ImageColor3 = Color3.fromRGB(65, 65, 65),
                    ScaleType = Enum.ScaleType.Slice,
                    SliceCenter = Rect.new(100, 100, 100, 100),
                    SliceScale = 0.040,
                })

                tb.text = lib:Create("TextLabel", {
                    BackgroundColor3 = Color3.fromRGB(255, 255, 255),
                    BackgroundTransparency = 1.000,
                    BorderSizePixel = 0,
                    Size = UDim2.new(0, 79, 0, 35),
                    Font = Enum.Font.GothamSemibold,
                    Text = Name,
                    TextColor3 = Color3.fromRGB(255, 255, 255),
                    TextSize = 16.000,
                    TextScaled = true,
                    TextWrapped = true,
                })

                tb.darkoutline = lib:Create("ImageLabel", {
                    Name = "TextBoxFrame",
                    BackgroundColor3 = Color3.fromRGB(255, 255, 255),
                    BackgroundTransparency = 1.000,
                    Position = UDim2.new(0.163223147, 0, 0.0857142881, 0),
                    Size = UDim2.new(0, 401, 0, 29),
                    Image = "rbxassetid://3570695787",
                    ImageColor3 = Color3.fromRGB(55, 55, 55),
                    ScaleType = Enum.ScaleType.Slice,
                    SliceCenter = Rect.new(100, 100, 100, 100),
                    SliceScale = 0.040,
                })

                tb.textbox = lib:Create("TextBox", {
                    BackgroundColor3 = Color3.fromRGB(255, 255, 255),
                    BackgroundTransparency = 1.000,
                    BorderSizePixel = 0,
                    Size = UDim2.new(0, 401, 0, 29),
                    Font = Enum.Font.GothamSemibold,
                    PlaceholderColor3 = Color3.fromRGB(178, 178, 178),
                    PlaceholderText = PlaceholderText,
                    Text = "",
                    TextColor3 = Color3.fromRGB(255, 255, 255),
                    TextSize = 16.000,
                })
                
                tb.textbox.FocusLost:Connect(function()
                    if not AutoName and CallBack then
                        CallBack(tb.textbox.Text)
                    elseif AutoName then 
                        for i,v in pairs(game.Players:GetChildren()) do
                            if string.match(v.Name:lower(),tb.textbox.Text:lower()) then
                               tb.textbox.Text = v.Name
                            end
                         end
                         CallBack(tb.textbox.Text)
                    end
                end)

                categories.Container.CanvasSize = categories.Container.CanvasSize + UDim2.new(0,0,0,40)

                tb.textboxback.Parent = categories.Container
                tb.text.Parent = tb.textboxback
                tb.darkoutline.Parent = tb.textboxback
                tb.textbox.Parent = tb.darkoutline

                return tb
            end 

            function sections:KeyBind(Name, CallBack, Default)
                local kb = {}
                local kbind
                
                kb.kbback = lib:Create("ImageLabel", {
                    Name = Name.."KeyBind",
                    BackgroundColor3 = Color3.fromRGB(255, 255, 255),
                    BackgroundTransparency = 1.000,
                    Position = UDim2.new(0.00214187521, 0, 0.886178553, 0),
                    Size = UDim2.new(0, 484, 0, 35),
                    Image = "rbxassetid://3570695787",
                    ImageColor3 = Color3.fromRGB(65, 65, 65),
                    ScaleType = Enum.ScaleType.Slice,
                    SliceCenter = Rect.new(100, 100, 100, 100),
                    SliceScale = 0.040,
                })

                kb.kbtext = lib:Create("TextLabel", {
                    BackgroundColor3 = Color3.fromRGB(255, 255, 255),
                    BackgroundTransparency = 1.000,
                    BorderSizePixel = 0,
                    Size = UDim2.new(0, 79, 0, 35),
                    Font = Enum.Font.GothamSemibold,
                    Text = Name,
                    TextColor3 = Color3.fromRGB(255, 255, 255),
                    TextSize = 16.000,
                    TextScaled = true,
                    TextWrapped = true,
                })

                kb.darkoutline = lib:Create("ImageLabel", {
                    Name = "SelectKeyBindFrame",
                    BackgroundColor3 = Color3.fromRGB(255, 255, 255),
                    BackgroundTransparency = 1.000,
                    Position = UDim2.new(0.163223147, 0, 0.0857142881, 0),
                    Size = UDim2.new(0, 401, 0, 29),
                    Image = "rbxassetid://3570695787",
                    ImageColor3 = Color3.fromRGB(55, 55, 55),
                    ScaleType = Enum.ScaleType.Slice,
                    SliceCenter = Rect.new(100, 100, 100, 100),
                    SliceScale = 0.040,
                })

                kb.kb = lib:Create("TextButton", {
                    BackgroundColor3 = Color3.fromRGB(255, 255, 255),
                    BackgroundTransparency = 1.000,
                    BorderColor3 = Color3.fromRGB(27, 42, 53),
                    BorderSizePixel = 0,
                    Position = UDim2.new(0.271820456, 0, 0.103448279, 0),
                    Size = UDim2.new(0.399002492, 0, 0.758620679, 0),
                    Font = Enum.Font.Gotham,
                    Text = "None",
                    TextColor3 = Color3.fromRGB(255, 255, 255),
                    TextScaled = true,
                    TextSize = 16.000,
                    TextWrapped = true,
                })

                local c

                if Default then 
                    kbind = Default
                    kb.kb.Text = kbind.Name
                end

                kb.kb.MouseButton1Click:Connect(function()
                    kb.kb.Text = "..."
                    c = UIS.InputBegan:Connect(function(i)
                        if i.UserInputType.Name == "Keyboard" and i.KeyCode ~= Enum.KeyCode.Backspace then
                            kb.kb.Text = i.KeyCode.Name
                            kbind = i.KeyCode
                            wait(.1)
                            if c then
                                c:Disconnect()
                                c = nil
                            end
                        elseif i.KeyCode == Enum.KeyCode.Backspace then
                            kb.kb.Text = "None"
                            kbind = nil
                            wait(.1)
                            if c then
                                c:Disconnect()
                                c = nil
                            end
                        end
                    end)

                    game:GetService("UserInputService").InputBegan:Connect(function(i, GPE)
                        if kbind and i.KeyCode == kbind and not GPE and not c then
                            if CallBack then
                                CallBack(i.KeyCode)
                            end
                        end
                    end)
                end)

                categories.Container.CanvasSize = categories.Container.CanvasSize + UDim2.new(0,0,0,40)

                kb.kbback.Parent = categories.Container
                kb.kbtext.Parent = kb.kbback
                kb.darkoutline.Parent = kb.kbback
                kb.kb.Parent = kb.darkoutline

                return kb
            end

            function sections:DropDown(Name, CallBack, Options, Playerlist)
                local dd = {}
                local toggled = false
                local dvalue 
                local options

                if Options and not Playerlist then
                    options = Options
                elseif Options and Others.playerlist then
                    options = {}
                    for g,f in pairs(Options) do
                        table.insert(options, f)
                    end
                    local list = game:GetService("Players"):GetChildren()
                    for i,v in pairs(list) do
                        if v:IsA("Player") then
                            table.insert(options, v.Name)
                        end
                    end
                elseif not Options and Playerlist then
                    options = {}
                    local list = game:GetService("Players"):GetChildren()
                    for i,v in pairs(list) do
                        if v:IsA("Player") then
                            table.insert(options, v.Name)
                        end
                    end                                    
                end

                dd.ddback = lib:Create("ImageLabel", {
                    Name = Name.."DropDown",
                    BackgroundColor3 = Color3.fromRGB(255, 255, 255),
                    BackgroundTransparency = 1.000,
                    Position = UDim2.new(0.00415800419, 0, 0.86175108, 0),
                    Size = UDim2.new(0, 484, 0, 35),
                    Image = "rbxassetid://3570695787",
                    ImageColor3 = Color3.fromRGB(65, 65, 65),
                    ScaleType = Enum.ScaleType.Slice,
                    SliceCenter = Rect.new(100, 100, 100, 100),
                    SliceScale = 0.040,
                })

                dd.dddarkoutline = lib:Create("ImageLabel", {
                    Name = "DropDownButtonFrame",
                    BackgroundColor3 = Color3.fromRGB(255, 255, 255),
                    BackgroundTransparency = 1.000,
                    Position = UDim2.new(0.009999929, 0, 0.0857142881, 0),
                    Size = UDim2.new(0, 476, 0, 29),
                    Image = "rbxassetid://3570695787",
                    ImageColor3 = Color3.fromRGB(55, 55, 55),
                    ScaleType = Enum.ScaleType.Slice,
                    SliceCenter = Rect.new(100, 100, 100, 100),
                    SliceScale = 0.040,
                })

                dd.ddbutton = lib:Create("TextButton", {
                    Name = "DropDownButton",
                    BackgroundColor3 = Color3.fromRGB(55, 55, 55),
                    BackgroundTransparency = 1.000,
                    BorderSizePixel = 0,
                    Position = UDim2.new(0, 0, 0, 0),
                    Size = UDim2.new(0, 475, 0, 29),
                    AutoButtonColor = false,
                    Font = Enum.Font.GothamSemibold,
                    Text = tostring(options[1]),
                    TextColor3 = Color3.fromRGB(255, 255, 255),
                    TextSize = 16.000,
                })

                dd.ddmp = lib:Create("TextButton", {
                    Name = "AnotherDopDownButton",
                    BackgroundColor3 = Color3.fromRGB(55, 55, 55),
                    BackgroundTransparency = 1.000,
                    BorderSizePixel = 0,
                    Position = UDim2.new(0.938519001, 0, 0, 0),
                    Size = UDim2.new(0, 28, 0, 29),
                    AutoButtonColor = false,
                    Font = Enum.Font.Gotham,
                    Text = "+",
                    TextColor3 = Color3.fromRGB(255, 255, 255),
                    TextSize = 20.000,
                })

                dd.dd = lib:Create("ImageLabel", {
                    Name = "DropDown",
                    BackgroundColor3 = Color3.fromRGB(255, 255, 255),
                    BackgroundTransparency = 1.000,
                    Position = UDim2.new(-0.0105477981, 0, 1.37899256, 0),
                    Size = UDim2.new(0, 484, 0, 66),
                    ZIndex = 5,
                    Visible = false,
                    Image = "rbxassetid://3570695787",
                    ImageColor3 = Color3.fromRGB(65, 65, 65),
                    ScaleType = Enum.ScaleType.Slice,
                    SliceCenter = Rect.new(100, 100, 100, 100),
                    SliceScale = 0.040,
                })

                dd.ddscrolling = lib:Create("ScrollingFrame", {
                    Name = "SectionConatiner",
                    Active = true,
                    BackgroundColor3 = Color3.fromRGB(255, 255, 255),
                    BackgroundTransparency = 1.000,
                    BorderSizePixel = 0,
                    Position = UDim2.new(0.00206611562, 0, 0.0606060624, 0),
                    Size = UDim2.new(0, 478, 0, 62),
                    ZIndex = 5,
                    CanvasSize = UDim2.new(0, 0, 0, 0),
                    ScrollBarThickness = 5,
                })

                dd.ddscrollinglayout = lib:Create("UIListLayout", {
                    SortOrder = Enum.SortOrder.LayoutOrder,
                    Padding = UDim.new(0, 5),
                })

                dd.ddscrollingpadding = lib:Create("UIPadding", {

                })

                local function refreshlist()

                    for i,v in next, dd.ddscrolling:GetChildren() do
                        if v:IsA("ImageLabel") then
                            v:Destroy()
                        end
                    end

                    for i,v in next, options do
                        local buttonback = lib:Create("ImageLabel", {
                            Name = string.lower(v),
                            BackgroundColor3 = Color3.fromRGB(255, 255, 255),
                            BackgroundTransparency = 1.000,
                            Position = UDim2.new(0.009999929, 0, 0.0857142881, 0),
                            Size = UDim2.new(0, 476, 0, 29),
                            ZIndex = 5,
                            Image = "rbxassetid://3570695787",
                            ImageColor3 = Color3.fromRGB(55, 55, 55),
                            ScaleType = Enum.ScaleType.Slice,
                            SliceCenter = Rect.new(100, 100, 100, 100),
                            SliceScale = 0.040,
                        })

                        local button = lib:Create("TextButton", {
                            Name = "Button",
                            BackgroundColor3 = Color3.fromRGB(55, 55, 55),
                            BackgroundTransparency = 1.000,
                            BorderSizePixel = 0,
                            Position = UDim2.new(0, 0, 0, 0),
                            Size = UDim2.new(0, 475, 0, 29),
                            ZIndex = 5,
                            AutoButtonColor = false,
                            Font = Enum.Font.GothamSemibold,
                            Text = v,
                            TextColor3 = Color3.fromRGB(255, 255, 255),
                            TextSize = 16.000,
                        })

                        buttonback.Parent = dd.ddscrolling
                        button.Parent = buttonback

                        button.MouseButton1Click:Connect(function()
                            if toggled then

                                toggled = not toggled
                                dd.ddbutton.Text = v
                                dvalue = v

                                if toggled then 
                                    refreshlist()
                                    dd.ddmp.Text = "-"
                                    dd.dd.Visible = true
                                    TweenService:Create(dd.ddscrolling, TweenInfo.new(0.1), {CanvasSize = UDim2.new(0, 0, 0, dd.ddscrolling["UIListLayout"].AbsoluteContentSize.Y) + UDim2.new(0,0,0,5)}):Play()
                                else 
                                    refreshlist()
                                    dd.ddmp.Text = "+"
                                    dd.dd.Visible = false
                                    TweenService:Create(dd.ddscrolling, TweenInfo.new(0.1), {CanvasSize = UDim2.new(0, 0, 0, dd.ddscrolling["UIListLayout"].AbsoluteContentSize.Y) + UDim2.new(0,0,0,5)}):Play()
                                end

                                if CallBack then
                                    CallBack(dvalue)
                                end
                            end
                        end)
                    end
                end

                refreshlist()

                dd.ddbutton.MouseButton1Click:Connect(function()
                    toggled = not toggled
                    
                    if toggled then 
                        refreshlist()
                        dd.ddmp.Text = "-"
                        dd.dd.Visible = true
                        TweenService:Create(dd.ddscrolling, TweenInfo.new(0.1), {CanvasSize = UDim2.new(0, 0, 0, dd.ddscrolling["UIListLayout"].AbsoluteContentSize.Y) + UDim2.new(0,0,0,5)}):Play()
                    else 
                        refreshlist()
                        dd.ddmp.Text = "+"
                        dd.dd.Visible = false
                        TweenService:Create(dd.ddscrolling, TweenInfo.new(0.1), {CanvasSize = UDim2.new(0, 0, 0, dd.ddscrolling["UIListLayout"].AbsoluteContentSize.Y) + UDim2.new(0,0,0,5)}):Play()
                    end
                end)

                dd.ddback.Parent = categories.Container
                dd.dddarkoutline.Parent = dd.ddback
                dd.ddbutton.Parent = dd.dddarkoutline
                dd.ddmp.Parent = dd.dddarkoutline
                dd.dd.Parent = dd.dddarkoutline
                dd.ddscrolling.Parent = dd.dd
                dd.ddscrollinglayout.Parent = dd.ddscrolling
                dd.ddscrollingpadding.Parent = dd.ddscrolling

                categories.Container.CanvasSize = categories.Container.CanvasSize + UDim2.new(0,0,0,40)

                return dd   
            end 

            sections.sectionname.Parent = categories.Container

            return sections
        end

        main.CategoryContainer.CanvasSize = main.CategoryContainer.CanvasSize + UDim2.new(0,0,0,53)

        categories.Button.Parent = main.CategoryContainer
        categories.Container.Parent = main.MainBody
        categories.ContainerLayout.Parent = categories.Container
        categories.ContainerPadding.Parent = categories.Container

        firstC = false

        return categories
    end

    main.Close.MouseButton1Click:Connect(function()
        game.CoreGui.Calamity:Destroy()
    end)

    main.ScreenGui.Parent = CoreGui
    main.MainBody.Parent = main.ScreenGui
    main.TopBar.Parent = main.MainBody
    main.TopBarGradient.Parent = main.TopBar
    main.LogoTextFolder.Parent = main.TopBar
    main.LogoText1.Parent = main.LogoTextFolder
    main.LogoText2.Parent = main.LogoTextFolder
    main.LogoText3.Parent = main.LogoTextFolder
    main.LogoText4.Parent = main.LogoTextFolder
    main.CloseFrame.Parent = main.TopBar
    main.Close.Parent = main.CloseFrame
    main.CategoryContainer.Parent = main.MainBody
    main.CategoryPadding.Parent = main.CategoryContainer
    main.CategoryLayout.Parent = main.CategoryContainer

    return main
end

return lib 